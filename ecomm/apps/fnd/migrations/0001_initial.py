# Generated by Django 4.1.2 on 2022-11-07 10:41

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import ecomm.apps.fnd.models.brand
import ecomm.apps.fnd.models.category
import ecomm.apps.fnd.models.fnd
import ecomm.apps.fnd.models.media
import ecomm.apps.fnd.models.product
import ecomm.vendors.mixins.model
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=180, unique=True, verbose_name='Brand URL')),
                ('name', models.JSONField(max_length=120)),
                ('site', models.CharField(blank=True, max_length=180, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=ecomm.apps.fnd.models.brand.brand_logo_upload_to)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
            bases=(models.Model, ecomm.vendors.mixins.model.NameByLangMixin),
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscore, or hyphens', max_length=150, unique=True, verbose_name='Category URL')),
                ('name', models.JSONField(max_length=180)),
                ('thumb', models.ImageField(blank=True, null=True, upload_to=ecomm.apps.fnd.models.category.cat_thumb_upload_to)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('name', models.JSONField(max_length=500)),
                ('coupon_code', models.CharField(max_length=20, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Fnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=80, unique=True, verbose_name='Foundation URL')),
                ('name', models.JSONField(blank=True, max_length=80, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=ecomm.apps.fnd.models.fnd.fnd_logo_upload_to)),
                ('main_layout', models.CharField(choices=[('layouts/upper.html', 'Upper'), ('layouts/lower.html', 'Lower'), ('layouts/left.html', 'Left'), ('layouts/right.html', 'Right')], default='layouts/upper.html', max_length=20)),
                ('content_layout', models.CharField(choices=[('list_container-row', 'Row'), ('list_container-col', 'Column')], default='list_container-row', max_length=20)),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark')], default='light', max_length=6)),
                ('langs', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Foundation',
                'verbose_name_plural': 'Foundations',
            },
            bases=(models.Model, ecomm.vendors.mixins.model.NameByLangMixin),
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country_code', models.CharField(blank=True, max_length=4)),
                ('total_paid', models.DecimalField(decimal_places=2, max_digits=5)),
                ('order_key', models.CharField(max_length=200)),
                ('billing_status', models.BooleanField(default=False)),
                ('payment', models.CharField(blank=True, max_length=200)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_account', to=settings.AUTH_USER_MODEL)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_orders', to='fnd.fnd')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ('-created_at',),
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Product URL')),
                ('sku', models.CharField(max_length=20, unique=True)),
                ('thumb', models.ImageField(blank=True, null=True, upload_to=ecomm.apps.fnd.models.product.prod_thumb_upload_to)),
                ('ext_name', models.JSONField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(10000000)])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(10000000)])),
                ('is_digital', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-created_at',),
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('trs', models.JSONField(blank=True, null=True)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_attributes', to='fnd.fnd')),
            ],
            options={
                'verbose_name': 'Product attribute',
                'verbose_name_plural': 'Product attributes',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('value', models.CharField(max_length=255)),
                ('trs', models.JSONField(blank=True, null=True)),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='values', to='fnd.productattribute')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=180, unique=True, verbose_name='Product(base) URL')),
                ('name', models.JSONField(max_length=500)),
                ('short_desc', models.JSONField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_prods', to='fnd.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_base_creator', to=settings.AUTH_USER_MODEL)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_prods', to='fnd.fnd')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prod_base_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Base product',
                'verbose_name_plural': 'Base products',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price_override', models.BooleanField(default=False)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prods_sales', to='fnd.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('title', models.CharField(blank=True, max_length=80, null=True)),
                ('trs', models.JSONField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='types', to='fnd.category')),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_types', to='fnd.fnd')),
            ],
            options={
                'verbose_name': 'Product type',
                'verbose_name_plural': 'Product types',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('sale_reduction', models.IntegerField(default=0)),
                ('is_schedule', models.BooleanField(default=False)),
                ('sale_start', models.DateField()),
                ('sale_end', models.DateField()),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_coupons', to='fnd.coupon')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_creator', to=settings.AUTH_USER_MODEL)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_sales', to='fnd.fnd')),
                ('prod_sale', models.ManyToManyField(related_name='prod_sales', through='fnd.ProductSale', to='fnd.product')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('units', models.IntegerField(default=0)),
                ('units_sold', models.IntegerField(default=0)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_stock', to='fnd.fnd')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='stock_prod', to='fnd.product')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SaleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=80, unique=True)),
                ('name', models.JSONField(max_length=500)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_type_creator', to=settings.AUTH_USER_MODEL)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_sale_types', to='fnd.fnd')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_type_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sale type',
                'verbose_name_plural': 'Sale types',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SaleTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(default='en', max_length=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translation', to='fnd.sale')),
            ],
            options={
                'verbose_name': 'Sale translation',
                'verbose_name_plural': 'Sale translations',
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='sale_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sale_types', to='fnd.saletype'),
        ),
        migrations.AddField(
            model_name='sale',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductTypeAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('prod_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attribute', to='fnd.productattribute')),
                ('prod_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='type', to='fnd.producttype')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='producttype',
            name='product_type_attributes',
            field=models.ManyToManyField(related_name='types', through='fnd.ProductTypeAttribute', to='fnd.productattribute'),
        ),
        migrations.AddField(
            model_name='productsale',
            name='sale_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale', to='fnd.sale'),
        ),
        migrations.CreateModel(
            name='ProductBaseTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(default='en', max_length=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('prod_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translation', to='fnd.productbase')),
            ],
            options={
                'verbose_name': 'Base product translation',
                'verbose_name_plural': 'Base product translations',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('attribute_values', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='values', to='fnd.productattributevalue')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attr_values', to='fnd.product')),
            ],
            options={
                'unique_together': {('attribute_values', 'product')},
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='attribute_values',
            field=models.ManyToManyField(related_name='prods', through='fnd.ProductAttributeValues', to='fnd.productattributevalue'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prod', to='fnd.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='fnd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_prods', to='fnd.fnd'),
        ),
        migrations.AddField(
            model_name='product',
            name='prod_base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_prods', to='fnd.productbase'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prod', to='fnd.producttype'),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prod_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_order_products', to='fnd.fnd')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_orderproducts', to='fnd.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_orderproducts', to='fnd.product')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('img', models.ImageField(upload_to=ecomm.apps.fnd.models.media.product_media_upload_to)),
                ('alt_text', models.JSONField(blank=True, max_length=80, null=True)),
                ('is_feature', models.BooleanField(default=False)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_media', to='fnd.fnd')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='media', to='fnd.product')),
            ],
            options={
                'verbose_name': 'Product image',
                'verbose_name_plural': 'Product images',
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FndTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(default='en', max_length=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translation', to='fnd.fnd')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
                ('name', models.JSONField(help_text='Required', max_length=255, verbose_name='delivery_name')),
                ('price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 999.99.'}}, help_text='Maximum 999.99', max_digits=5, verbose_name='delivery price')),
                ('method', models.CharField(choices=[('IS', 'In Store'), ('HD', 'Home Delivery'), ('DD', 'Digital Delivery')], help_text='Required', max_length=255, verbose_name='delivery_method')),
                ('time_frame', models.CharField(blank=True, help_text='Required', max_length=255, null=True, verbose_name='delivery timeframe')),
                ('time_window', models.CharField(blank=True, help_text='Required', max_length=255, null=True, verbose_name='delivery window')),
                ('position', models.IntegerField(default=0, help_text='Required', verbose_name='list order')),
                ('fnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_delivery', to='fnd.fnd')),
            ],
            options={
                'verbose_name': 'Delivery',
                'verbose_name_plural': 'Deliveries',
                'ordering': ['position'],
            },
            managers=[
                ('objs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='coupon',
            name='fnd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fnd_coupons', to='fnd.fnd'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupon_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='fnd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='fnd.fnd'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='fnd.category', verbose_name='parent of category'),
        ),
        migrations.AddField(
            model_name='category',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='brand',
            name='fnd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='fnd.fnd'),
        ),
        migrations.AddField(
            model_name='brand',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='productsale',
            unique_together={('product_id', 'sale_id')},
        ),
    ]
